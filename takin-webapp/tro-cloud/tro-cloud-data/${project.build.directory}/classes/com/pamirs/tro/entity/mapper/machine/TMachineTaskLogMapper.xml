<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2021 Shulie Technology, Co.Ltd
  ~ Email: shulie@shulie.io
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~      http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pamirs.tro.entity.dao.machine.TMachineTaskLogMapper">
    <resultMap id="BaseResultMap" type="com.pamirs.tro.entity.domain.entity.machine.MachineTaskLog">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="task_id" jdbcType="BIGINT" property="taskId"/>
        <result column="serial_no" jdbcType="VARCHAR" property="serialNo"/>
        <result column="ip" jdbcType="VARCHAR" property="ip"/>
        <result column="hostname" jdbcType="VARCHAR" property="hostname"/>
        <result column="status" jdbcType="TINYINT" property="status"/>
        <result column="is_delete" jdbcType="BIT" property="isDelete"/>
        <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate"/>
        <result column="gmt_update" jdbcType="TIMESTAMP" property="gmtUpdate"/>
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs"
               type="com.pamirs.tro.entity.domain.entity.machine.MachineTaskLog">
        <result column="log" jdbcType="LONGVARCHAR" property="log"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, task_id, serial_no, ip, hostname, status, is_delete, gmt_create, gmt_update
    </sql>
    <sql id="Blob_Column_List">
        log
    </sql>
    <select id="selectByExampleWithBLOBs"
            parameterType="com.pamirs.tro.entity.domain.entity.machine.MachineTaskLogExample"
            resultMap="ResultMapWithBLOBs">
        select
        <if test="distinct">
            distinct
        </if>
        'false' as QUERYID,
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from t_machine_task_log
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByExample" parameterType="com.pamirs.tro.entity.domain.entity.machine.MachineTaskLogExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        'false' as QUERYID,
        <include refid="Base_Column_List"/>
        from t_machine_task_log
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from t_machine_task_log
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from t_machine_task_log
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" parameterType="com.pamirs.tro.entity.domain.entity.machine.MachineTaskLog">
        insert into t_machine_task_log (id, task_id, serial_no,
                                        ip, hostname, status,
                                        is_delete, gmt_create, gmt_update,
                                        log)
        values (#{id,jdbcType=BIGINT}, #{taskId,jdbcType=BIGINT}, #{serialNo,jdbcType=VARCHAR},
                #{ip,jdbcType=VARCHAR}, #{hostname,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT},
                #{isDelete,jdbcType=BIT}, #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtUpdate,jdbcType=TIMESTAMP},
                #{log,jdbcType=LONGVARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.pamirs.tro.entity.domain.entity.machine.MachineTaskLog">
        insert into t_machine_task_log
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="taskId != null">
                task_id,
            </if>
            <if test="serialNo != null">
                serial_no,
            </if>
            <if test="ip != null">
                ip,
            </if>
            <if test="hostname != null">
                hostname,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="isDelete != null">
                is_delete,
            </if>
            <if test="gmtCreate != null">
                gmt_create,
            </if>
            <if test="gmtUpdate != null">
                gmt_update,
            </if>
            <if test="log != null">
                log,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="taskId != null">
                #{taskId,jdbcType=BIGINT},
            </if>
            <if test="serialNo != null">
                #{serialNo,jdbcType=VARCHAR},
            </if>
            <if test="ip != null">
                #{ip,jdbcType=VARCHAR},
            </if>
            <if test="hostname != null">
                #{hostname,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=TINYINT},
            </if>
            <if test="isDelete != null">
                #{isDelete,jdbcType=BIT},
            </if>
            <if test="gmtCreate != null">
                #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="gmtUpdate != null">
                #{gmtUpdate,jdbcType=TIMESTAMP},
            </if>
            <if test="log != null">
                #{log,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByExampleSelective" parameterType="map">
        update t_machine_task_log
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.taskId != null">
                task_id = #{record.taskId,jdbcType=BIGINT},
            </if>
            <if test="record.serialNo != null">
                serial_no = #{record.serialNo,jdbcType=VARCHAR},
            </if>
            <if test="record.ip != null">
                ip = #{record.ip,jdbcType=VARCHAR},
            </if>
            <if test="record.hostname != null">
                hostname = #{record.hostname,jdbcType=VARCHAR},
            </if>
            <if test="record.status != null">
                status = #{record.status,jdbcType=TINYINT},
            </if>
            <if test="record.isDelete != null">
                is_delete = #{record.isDelete,jdbcType=BIT},
            </if>
            <if test="record.gmtCreate != null">
                gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="record.gmtUpdate != null">
                gmt_update = #{record.gmtUpdate,jdbcType=TIMESTAMP},
            </if>
            <if test="record.log != null">
                log = #{record.log,jdbcType=LONGVARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExampleWithBLOBs" parameterType="map">
        update t_machine_task_log
        set id = #{record.id,jdbcType=BIGINT},
        task_id = #{record.taskId,jdbcType=BIGINT},
        serial_no = #{record.serialNo,jdbcType=VARCHAR},
        ip = #{record.ip,jdbcType=VARCHAR},
        hostname = #{record.hostname,jdbcType=VARCHAR},
        status = #{record.status,jdbcType=TINYINT},
        is_delete = #{record.isDelete,jdbcType=BIT},
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
        gmt_update = #{record.gmtUpdate,jdbcType=TIMESTAMP},
        log = #{record.log,jdbcType=LONGVARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update t_machine_task_log
        set id = #{record.id,jdbcType=BIGINT},
        task_id = #{record.taskId,jdbcType=BIGINT},
        serial_no = #{record.serialNo,jdbcType=VARCHAR},
        ip = #{record.ip,jdbcType=VARCHAR},
        hostname = #{record.hostname,jdbcType=VARCHAR},
        status = #{record.status,jdbcType=TINYINT},
        is_delete = #{record.isDelete,jdbcType=BIT},
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
        gmt_update = #{record.gmtUpdate,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.pamirs.tro.entity.domain.entity.machine.MachineTaskLog">
        update t_machine_task_log
        <set>
            <if test="taskId != null">
                task_id = #{taskId,jdbcType=BIGINT},
            </if>
            <if test="serialNo != null">
                serial_no = #{serialNo,jdbcType=VARCHAR},
            </if>
            <if test="ip != null">
                ip = #{ip,jdbcType=VARCHAR},
            </if>
            <if test="hostname != null">
                hostname = #{hostname,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=TINYINT},
            </if>
            <if test="isDelete != null">
                is_delete = #{isDelete,jdbcType=BIT},
            </if>
            <if test="gmtCreate != null">
                gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="gmtUpdate != null">
                gmt_update = #{gmtUpdate,jdbcType=TIMESTAMP},
            </if>
            <if test="log != null">
                log = #{log,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.pamirs.tro.entity.domain.entity.machine.MachineTaskLog">
        update t_machine_task_log
        set task_id    = #{taskId,jdbcType=BIGINT},
            serial_no  = #{serialNo,jdbcType=VARCHAR},
            ip         = #{ip,jdbcType=VARCHAR},
            hostname   = #{hostname,jdbcType=VARCHAR},
            status     = #{status,jdbcType=TINYINT},
            is_delete  = #{isDelete,jdbcType=BIT},
            gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
            gmt_update = #{gmtUpdate,jdbcType=TIMESTAMP},
            log        = #{log,jdbcType=LONGVARCHAR}
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.pamirs.tro.entity.domain.entity.machine.MachineTaskLog">
        update t_machine_task_log
        set task_id    = #{taskId,jdbcType=BIGINT},
            serial_no  = #{serialNo,jdbcType=VARCHAR},
            ip         = #{ip,jdbcType=VARCHAR},
            hostname   = #{hostname,jdbcType=VARCHAR},
            status     = #{status,jdbcType=TINYINT},
            is_delete  = #{isDelete,jdbcType=BIT},
            gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
            gmt_update = #{gmtUpdate,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=BIGINT}
    </update>
</mapper>
