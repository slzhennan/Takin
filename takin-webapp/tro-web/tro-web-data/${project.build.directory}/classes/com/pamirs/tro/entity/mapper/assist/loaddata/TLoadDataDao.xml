<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2021 Shulie Technology, Co.Ltd
  ~ Email: shulie@shulie.io
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~      http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pamirs.tro.entity.dao.assist.loaddata.TLoadDataDao">

    <!--批量更新抽数状态-->
    <update id="updateLoadDataStatus">
        UPDATE t_abstract_data
        SET LOAD_STATUS =#{loadStatus},
            UPDATE_TIME = now()
        WHERE DB_STATUS = 1
          AND USE_YN = 1
          AND TAD_ID = #{tadId}
    </update>

    <!--批量启动或者禁用-->
    <update id="updatebatchStartOrStop">
        update t_abstract_data
        set
        USE_YN=#{startOrStop},
        UPDATE_TIME=now()
        where
        t_abstract_data.DB_STATUS=1
        and
        TAD_ID in
        <foreach separator="," index="index" item="tadId"
                 collection="tadIdList" close=")" open="(">
            #{tadId}
        </foreach>
    </update>

    <resultMap type="com.pamirs.tro.entity.domain.query.TConf"
               id="tConf">
        <id column="TDC_ID" property="tdcId" javaType="long"/>
        <result column="DB_TYPE" property="dbType" javaType="String"/>
        <result column="DATA_SOURCE" property="dataSource" javaType="String"/>
        <result column="DATA_TURN" property="dataTurn" javaType="String"/>
        <result column="URL" property="url" javaType="String"/>
        <result column="USERNAME" property="username" javaType="String"/>
        <result column="PASSWD" property="passwd" javaType="String"/>
        <result column="DRIVER_CLASS_NAME" property="driverClassName" javaType="String"/>
        <result column="DICT_TYPE" property="dictType" javaType="String"/>
        <result column="DATABASE_IP" property="databaseIp" javaType="String"/>
        <result column="DATABASE_NAME" property="databaseName" javaType="String"/>
        <result column="LOAD_STATUS" property="loadStatus" javaType="String"/>
        <result column="PUBLIC_KEY" property="publicKey" javaType="String"/>
        <collection column="TDC_ID" property="tAbstractDataList"
                    ofType="com.pamirs.tro.entity.domain.entity.TAbstractData">
            <result column="TAD_ID" property="tadId"
                    javaType="long"/>
            <result column="TDC_ID" property="tdcId" javaType="long"/>
            <result column="TABLE_NAME" property="tableName" javaType="String"/>
            <result column="SQL_DDl" property="sqlDdl"
                    javaType="String"/>
            <result column="ABSTRACT_SQL" property="abstractSql"
                    javaType="String"/>
            <result column="DEAL_SQL" property="dealSql"
                    javaType="String"/>
            <result column="PRINCIPAL_NO" property="principalNo"
                    javaType="String"/>
            <result column="SQL_TYPE" property="sqlType"
                    javaType="String"/>
            <result column="DB_STATUS" property="dbStatus"
                    javaType="String"/>
            <result column="USE_YN" property="useYn"
                    javaType="String"/>
            <result column="CREATE_TIME" property="createTime" javaType="Date"/>
            <result column="UPDATE_TIME" property="updateTime" javaType="Date"/>
        </collection>
    </resultMap>

    <!--根据id查询抽取数据的数据库配置-->
    <select id="queryDataBaseConf" resultMap="tConf">
        SELECT
        tdc.TDC_ID,
        tdd.VALUE_NAME DB_TYPE,
        tdc.DATA_SOURCE,
        tdc.DATA_TURN,
        tdc.URL,
        tdc.USERNAME,
        tdc.PASSWD,
        tdc.DRIVER_CLASS_NAME,
        tdc.DICT_TYPE,
        tdc.DATABASE_IP,
        tdc.DATABASE_NAME,
        tdc.PUBLIC_KEY,
        tdc.LOAD_STATUS,
        tad.TAD_ID,
        tad.TABLE_NAME,
        tad.SQL_DDl,
        tad.SQL_TYPE,
        tad.ABSTRACT_SQL,
        tad.DEAL_SQL,
        tad.PRINCIPAL_NO,
        tad.DB_STATUS,
        tad.USE_YN,
        tad.CREATE_TIME,
        tad.UPDATE_TIME
        FROM
        t_database_conf tdc
        LEFT JOIN t_abstract_data tad ON tdc.TDC_ID = tad.TDC_ID
        LEFT JOIN t_dictionary_type tdt ON tdc.DICT_TYPE = tdt.ID
        LEFT JOIN t_dictionary_data tdd ON tdt.ID = tdd.DICT_TYPE
        WHERE
        tdt.ACTIVE = 'Y'
        AND tdc.DB_TYPE = tdd.VALUE_ORDER
        AND tad.DB_STATUS = 1
        AND tad.USE_YN = 1
        AND tad.TAD_ID in
        <foreach collection="tadIdList" separator=","
                 item="tadId" open="(" close=")">
            #{tadId}
        </foreach>
    </select>

    <!-- 数据插入到关系型数据库 -->
    <insert id="dataInsertToRDS" parameterType="java.util.Map">
        Insert into ${objTable}
        <foreach collection="map.keys" item="k" open="(" separator=","
                 close=")">
            ${k}
        </foreach>
        values
        <foreach collection="map.values" item="k" open="(" separator=","
                 close=")">
            #{k}
        </foreach>
    </insert>

    <!--数据库t_database_conf表字段映射到TDBConf对象-->
    <resultMap id="BaseResultMap" type="com.pamirs.tro.entity.domain.entity.TDBConf">
        <id column="TDC_ID" javaType="long" property="tdcId"/>
        <result column="DB_TYPE" javaType="Integer" property="dbType"/>
        <result column="DICT_TYPE" javaType="String" property="dictType"/>
        <result column="DATA_SOURCE" javaType="String" property="dataSource"/>
        <result column="DATA_TURN" javaType="String" property="dataTurn"/>
        <result column="URL" javaType="String" property="url"/>
        <result column="USERNAME" javaType="String" property="username"/>
        <result column="PASSWD" javaType="String" property="passwd"/>
        <result column="DRIVER_CLASS_NAME" javaType="String" property="driverClassName"/>
        <result column="DATABASE_IP" javaType="String" property="databaseIp"/>
        <result column="DATABASE_NAME" javaType="String" property="databaseName"/>
        <result column="DB_STATUS" javaType="Integer" property="dbStatus"/>
        <result column="LOAD_STATUS" javaType="Integer" property="loadStatus"/>
        <result column="CREATE_TIME" javaType="Date" property="createTime"/>
        <result column="UPDATE_TIME" javaType="Date" property="updateTime"/>
    </resultMap>

    <sql id="Base_Column_List">
        TDC_ID,DB_TYPE,DICT_TYPE,DATA_SOURCE,DATA_TURN,TABLE_NAME,URL,USERNAME,PASSWD,DRIVER_CLASS_NAME,
        DATABASE_IP,
        DATABASE_NAME,PRINCIPAL_NO,DB_STATUS,USE_YN,LOAD_STATUS,CREATE_TIME,UPDATE_TIME
    </sql>

    <!--查询数据库配置列表-->
    <select id="selectDBConfList" parameterType="map" resultType="com.pamirs.tro.entity.domain.vo.TDBconfVo">
        SELECT
        tdc.TDC_ID,
        tdd.VALUE_NAME DB_TYPE,
        tdc.DICT_TYPE,
        tdc.DATA_SOURCE,
        tdc.DATA_TURN,
        tdc.DATABASE_NAME,
        tdc.DB_STATUS,
        tdc.PUBLIC_KEY,
        tad.TABLE_NAME,
        tad.LOAD_STATUS,
        tad.PRINCIPAL_NO,
        tad.USE_YN,
        tad.CREATE_TIME,
        tad.UPDATE_TIME,
        tad.TAD_ID,
        tad.SQL_DDl,
        tad.ABSTRACT_SQL,
        tad.DEAL_SQL,
        tad.SQL_TYPE
        FROM
        t_database_conf tdc,
        t_dictionary_data tdd,
        t_abstract_data tad
        WHERE
        tdc.DICT_TYPE = tdd.DICT_TYPE
        AND tdc.TDC_ID = tad.TDC_ID
        AND tdc.DB_STATUS = 1
        AND tad.DB_STATUS = 1
        AND tdc.DB_TYPE = tdd.VALUE_ORDER
        <if test="databaseName!='' and databaseName!=null">
            and tdc.DATABASE_NAME like concat('%', #{databaseName},'%')
        </if>
        <if test="tableName!='' and tableName!=null">
            and tad.TABLE_NAME like concat('%',#{tableName},'%')
        </if>
        <if test="useYn!=null and useYn!=''">
            and tad.USE_YN = #{useYn}
        </if>
        ORDER BY tdc.UPDATE_TIME DESC
    </select>

    <!--根据抽数id查询场景id-->
    <select id="selectSecineId" resultType="java.util.Map">
        SELECT tlm.ASWAN_ID,
               tlm.LINK_NAME
        FROM t_link_mnt tlm
                 LEFT JOIN t_database_conf tdc ON tlm.LINK_ID = tdc.BASIC_LINK_ID
        WHERE tdc.DB_STATUS = 1
          AND tdc.TDC_ID = #{tdcId}
    </select>

    <!--逻辑删除数据库表-->
    <update id="deleteAbstractData" parameterType="List">
        UPDATE t_abstract_data SET DB_STATUS =0 WHERE TAD_ID IN
        <foreach collection="tadIds" separator="," item="tadId" open="(" close=")">
            #{tadId}
        </foreach>
    </update>

    <!--根据数据库表配置id查询数据库表详情-->
    <select id="queryAbstractDataInfoByTdcId" resultType="com.pamirs.tro.entity.domain.entity.TAbstractData">
        SELECT TAD_ID,
               TDC_ID,
               TABLE_NAME,
               SQL_DDl,
               ABSTRACT_SQL,
               DEAL_SQL,
               PRINCIPAL_NO,
               SQL_TYPE,
               DB_STATUS,
               USE_YN,
               CREATE_TIME,
               UPDATE_TIME
        FROM t_abstract_data
        WHERE DB_STATUS = 1
          AND TDC_ID = #{tdcId}
    </select>

    <!--通过数据库表配置id查询数据库配置id列表-->
    <select id="queryTdcIds" parameterType="List" resultType="java.lang.String">
        SELECT DISTINCT TDC_ID from t_abstract_data WHERE TAD_ID IN
        <foreach collection="tadIds" separator="," item="tadId" open="(" close=")">
            #{tadId}
        </foreach>
    </select>

    <!--数据库配置详情结果集-->
    <resultMap type="com.pamirs.tro.entity.domain.query.TDBAbstractData" id="TDBAbstractDataResult">
        <id column="TDC_ID" property="tdcId" javaType="long"/>
        <result column="DB_TYPE" property="dbType" javaType="String"/>
        <result column="BASIC_LINK_ID" property="basicLinkId" javaType="String"/>
        <result column="DATA_SOURCE" property="dataSource" javaType="String"/>
        <result column="DATA_TURN" property="dataTurn" javaType="String"/>
        <result column="URL" property="url" javaType="String"/>
        <result column="USERNAME" property="username" javaType="String"/>
        <result column="PASSWD" property="passwd" javaType="String"/>
        <result column="PUBLIC_KEY" property="publicKey" javaType="String"/>
        <result column="DRIVER_CLASS_NAME" property="driverClassName" javaType="String"/>
        <result column="DICT_TYPE" property="dictType" javaType="String"/>
        <result column="DATABASE_IP" property="databaseIp" javaType="String"/>
        <result column="DATABASE_NAME" property="databaseName" javaType="String"/>
        <result column="LOAD_STATUS" property="loadStatus" javaType="String"/>
        <collection column="TDC_ID" property="tAbstractDatalist"
                    ofType="com.pamirs.tro.entity.domain.entity.TAbstractData">
            <result column="TAD_ID" property="tadId" javaType="long"/>
            <result column="TDC_ID" property="tdcId" javaType="long"/>
            <result column="TABLE_NAME" property="tableName" javaType="String"/>
            <result column="SQL_DDl" property="sqlDdl" javaType="String"/>
            <result column="ABSTRACT_SQL" property="abstractSql" javaType="String"/>
            <result column="DEAL_SQL" property="dealSql" javaType="String"/>
            <result column="PRINCIPAL_NO" property="principalNo" javaType="String"/>
            <result column="SQL_TYPE" property="sqlType" javaType="String"/>
            <result column="DB_STATUS" property="dbStatus" javaType="String"/>
            <result column="USE_YN" property="useYn" javaType="String"/>
            <result column="CREATE_TIME" property="createTime" javaType="Date"/>
            <result column="UPDATE_TIME" property="updateTime" javaType="Date"/>
        </collection>
    </resultMap>

    <!--查询数据库配置详情-->
    <select id="selectDBConfById" resultMap="TDBAbstractDataResult">
        SELECT
        tdc.TDC_ID,
        tdc.BASIC_LINK_ID,
        tdc.DB_TYPE,
        tdc.DATA_SOURCE,
        tdc.DATA_TURN,
        tdc.URL,
        tdc.USERNAME,
        tdc.PASSWD,
        tdc.DRIVER_CLASS_NAME,
        tdc.DICT_TYPE,
        tdc.DATABASE_IP,
        tdc.DATABASE_NAME,
        tdc.LOAD_STATUS,
        tdc.PUBLIC_KEY,
        tad.TAD_ID,
        tad.TABLE_NAME,
        tad.SQL_DDl,
        tad.SQL_TYPE,
        tad.ABSTRACT_SQL,
        tad.DEAL_SQL,
        tad.PRINCIPAL_NO,
        tad.DB_STATUS,
        tad.USE_YN,
        tad.CREATE_TIME,
        tad.UPDATE_TIME
        FROM
        t_database_conf tdc
        LEFT JOIN t_abstract_data tad ON tdc.TDC_ID = tad.TDC_ID
        <!--LEFT JOIN t_dictionary_data tdd ON tdc.DICT_TYPE = tdd.DICT_TYPE-->
        WHERE
        <!--tdd.ACTIVE = 'Y'-->
        <!--AND tdc.DB_TYPE = tdd.VALUE_ORDER-->
        <!--AND -->
        tad.DB_STATUS = 1
        AND tdc.TDC_ID = #{tdcId}
    </select>


    <!--保存数据库配置信息-->
    <insert id="insertTDBConf" parameterType="com.pamirs.tro.entity.domain.query.TDBAbstractData">
        insert into t_database_conf
        (TDC_ID,
         BASIC_LINK_ID,
         DB_TYPE,
         DICT_TYPE,
         DATA_SOURCE,
         DATA_TURN,
         URL,
         USERNAME,
         PASSWD,
         DRIVER_CLASS_NAME,
         DATABASE_IP,
         DATABASE_NAME,
         DB_STATUS,
         CREATE_TIME,
         UPDATE_TIME,
         PUBLIC_KEY)
        values (#{tdcId},
                #{basicLinkId},
                #{dbType},
                #{dictType},
                #{dataSource},
                #{dataTurn},
                #{url},
                #{username},
                #{passwd},
                #{driverClassName},
                #{databaseIp},
                #{databaseName},
                #{dbStatus},
                now(),
                now(),
                #{publicKey})
    </insert>

    <insert id="insertTAbstractData" parameterType="com.pamirs.tro.entity.domain.query.TDBAbstractData">
        insert into t_abstract_data
        (
        TAD_ID,
        TDC_ID,
        TABLE_NAME,
        SQL_DDL,
        ABSTRACT_SQL,
        DEAL_SQL,
        PRINCIPAL_NO,
        SQL_TYPE,
        DB_STATUS,
        USE_YN,
        CREATE_TIME,
        UPDATE_TIME
        )
        values
        <foreach collection="tAbstractDataLists" item="tAbstractData" index="index" separator=",">
            (
            #{tAbstractData.tadId},
            #{tAbstractData.tdcId},
            #{tAbstractData.tableName},
            #{tAbstractData.sqlDdl},
            #{tAbstractData.abstractSql},
            #{tAbstractData.dealSql},
            #{tAbstractData.principalNo},
            #{tAbstractData.sqlType},
            #{tAbstractData.dbStatus},
            #{tAbstractData.useYn},
            now(),
            now()
            )
        </foreach>
    </insert>


    <!--更新部分字段-->
    <update id="updateDBConf" parameterType="com.pamirs.tro.entity.domain.entity.TDBConf">
        update t_database_conf
        <set>
            <if test="dbType != null">
                DB_TYPE = #{dbType},
            </if>
            <if test="dictType != null">
                DICT_TYPE = #{dictType},
            </if>
            <if test="dataSource != null">
                DATA_SOURCE = #{dataSource},
            </if>
            <if test="dataTurn != null">
                DATA_TURN = #{dataTurn },
            </if>
            <if test="url != null">
                URL = #{url },
            </if>
            <if test="username != null">
                USERNAME = #{username},
            </if>
            <if test="passwd != null">
                PASSWD = #{passwd},
            </if>
            <if test="driverClassName != null">
                DRIVER_CLASS_NAME = #{driverClassName},
            </if>
            <if test="databaseIp != null">
                DATABASE_IP = #{databaseIp},
            </if>
            <if test="databaseName != null">
                DATABASE_NAME = #{databaseName},
            </if>
            <if test="basicLinkId != null">
                BASIC_LINK_ID = #{basicLinkId},
            </if>
            <!-- <if test="principalNo != null">
                 PRINCIPAL_NO = #{principalNo},
             </if>-->
            <if test="dbStatus != null">
                DB_STATUS = #{dbStatus},
            </if>
            <!--<if test="useYn != null">-->
            <!--USE_YN = #{useYn},-->
            <!--</if>-->
            <if test="loadStatus != null">
                LOAD_STATUS = #{loadStatus},
            </if>
            <if test="publicKey != null">
                PUBLIC_KEY = #{publicKey},
            </if>
            <!--<if test="updateTime != null">-->
            <!--UPDATE_TIME = #{updateTime},-->
            <!--</if>-->
        </set>
        where TDC_ID = #{tdcId}
    </update>

    <insert id="addTAbstractData" parameterType="List">
        insert into
        t_abstract_data
        (
        TAD_ID,
        TDC_ID,
        TABLE_NAME,
        SQL_DDL,
        ABSTRACT_SQL,
        DEAL_SQL,
        PRINCIPAL_NO,
        SQL_TYPE,
        DB_STATUS,
        USE_YN,
        CREATE_TIME,
        UPDATE_TIME
        )
        values
        <foreach collection="saveAbstractDataLists" item="tAbstractData" index="index" separator=",">
            (
            #{tAbstractData.tadId},
            #{tAbstractData.tdcId},
            #{tAbstractData.tableName},
            #{tAbstractData.sqlDdl},
            #{tAbstractData.abstractSql},
            #{tAbstractData.dealSql},
            #{tAbstractData.principalNo},
            #{tAbstractData.sqlType},
            #{tAbstractData.dbStatus},
            #{tAbstractData.useYn},
            now(),
            now()
            )
        </foreach>
    </insert>


    <!-- 更新t_abstract_data中的信息 -->
    <update id="updateTAbstractData" parameterType="com.pamirs.tro.entity.domain.entity.TAbstractData">
        update
            t_abstract_data
        set TABLE_NAME=#{tableName},
            SQL_DDL=#{sqlDdl},
            DEAL_SQL=#{dealSql},
            PRINCIPAL_NO=#{principalNo},
            ABSTRACT_SQL=#{abstractSql},
            USE_YN=#{useYn},
            UPDATE_TIME=now()
        where TAD_ID = #{tadId}
    </update>


    <delete id="deleteTAbstractDataByIds" parameterType="List">
        delete from t_abstract_data where TAD_ID in
        <foreach collection="tadIdsList" separator="," item="tadId" open="(" close=")">
            #{tadIds}
        </foreach>
    </delete>

    <!-- 更新时候根据ID判断链路是否存在-->
    <select id="updateDatabaseConfExist" parameterType="String" resultType="java.lang.Integer">
        select count(1)
        from t_database_conf
        where TDC_ID = #{tdcId}
    </select>

    <!-- 更新时校验该链路服务关联表是否已经存在 -->
    <select id="updatedatabaseConfAbstractDataExist" parameterType="String"
            resultType="java.lang.Integer">
        select count(1)
        from t_database_conf tdc,
             t_abstract_data tad
        where tdc.TDC_ID = tad.TDC_ID
          and tad.TDC_ID = #{tdcId}
          and tad.TAD_ID = #{tadId}
    </select>

    <!--修改单个启用或者禁用-->
    <update id="startSingleDBConfById" parameterType="com.pamirs.tro.entity.domain.entity.TDBConf">
        update t_database_conf
        <set>
            <if test="useYn == 0">
                USE_YN = 1,
            </if>
        </set>
        where TDC_ID = #{tdcId}
    </update>

    <update id="closeSingleDBConfById" parameterType="com.pamirs.tro.entity.domain.entity.TDBConf">
        update t_database_conf
        <set>
            <if test="useYn == 1">
                USE_YN = 0,
            </if>
        </set>
        where TDC_ID = #{tdcId}
    </update>


    <update id="batchStart" parameterType="list">
        update t_database_conf
        <set>
            <if test="useYn != 1">
                USE_YN = 1 ,
            </if>

        </set>
        where TDC_ID IN
        <foreach collection="tdcIdList" open=" " close=" " separator="," item="tdcId">
            #{tdcId}
        </foreach>
    </update>

    <update id="batchClose" parameterType="list">
        update t_database_conf
        <set>
            <if test="useYn != 0">
                USE_YN = 0 ,
            </if>

        </set>
        where TDC_ID IN
        <foreach collection="tdcIdList" open=" " close=" " separator="," item="tdcId">
            #{tdcId}
        </foreach>
    </update>

    <update id="deleteDBConf" parameterType="String">
        update t_database_conf
        set DB_STATUS = 0
        where TDC_ID = #{tdcId}
    </update>

    <select id="queryBasicLink" resultType="java.util.Map">
        select concat(LINK_ID, '') basicLinkId, LINK_NAME basicLinkName
        from t_link_mnt
    </select>

    <!--删除临时表-->
    <update id="dropTable">
        <!--<foreach separator=";" index="index" item="tableName"-->
        <!--collection="ableDeleteTables" close="" open="">-->
        DROP TABLE IF EXISTS ${tableName}
        <!--</foreach>-->
    </update>

    <select id="selectTadIdListByTdcIdAndStatus" parameterType="map" resultType="long">
        SELECT TAD_ID
        FROM t_abstract_data
        WHERE TDC_ID = #{tdcId}
          AND DB_STATUS = #{dbStatus}
    </select>
    <select id="queryLoadstatus" resultType="java.util.Map" parameterType="list">
        SELECT TAD_ID,LOAD_STATUS FROM t_abstract_data WHERE TAD_ID IN
        <foreach collection="tadIds" open="(" close=")" separator="," item="tadId">
            #{tadId}
        </foreach>
    </select>
</mapper>
