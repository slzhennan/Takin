<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Copyright 2021 Shulie Technology, Co.Ltd
  ~ Email: shulie@shulie.io
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~      http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pamirs.tro.entity.dao.confcenter.TLinkTopologyInfoDao">
    <resultMap id="BaseResultMap" type="com.pamirs.tro.entity.domain.entity.TLinkTopologyInfo">
        <constructor>
            <idArg column="TLTI_ID" jdbcType="BIGINT" javaType="java.lang.Long"/>
            <arg column="LINK_ID" jdbcType="BIGINT" javaType="java.lang.Long"/>
            <arg column="LINK_NAME" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="ENTRANCE_TYPE" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="LINK_ENTRANCE" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="NAME_SERVER" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="LINK_TYPE" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="LINK_GROUP" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="FROM_LINK_IDS" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="TO_LINK_IDS" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="SHOW_FROM_LINK_ID" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="SHOW_TO_LINK_ID" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="SECOND_LINK_ID" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="SECOND_LINK_NAME" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="APPLICATION_NAME" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="VOLUME_CALC_STATUS" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="CREATE_TIME" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
            <arg column="UPDATE_TIME" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
        </constructor>
    </resultMap>


    <sql id="Base_Column_List">
        TLTI_ID, LINK_ID, LINK_NAME, ENTRANCE_TYPE, LINK_ENTRANCE, NAME_SERVER, LINK_TYPE,
    LINK_GROUP, FROM_LINK_IDS, TO_LINK_IDS, SHOW_FROM_LINK_ID, SHOW_TO_LINK_ID, SECOND_LINK_ID,
    SECOND_LINK_NAME, APPLICATION_NAME, VOLUME_CALC_STATUS, CREATE_TIME, UPDATE_TIME
    </sql>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from t_link_topology_info
        where TLTI_ID = #{tltiId,jdbcType=BIGINT}
    </select>

    <select id="list" resultMap="BaseResultMap" parameterType="com.pamirs.tro.entity.domain.entity.TLinkTopologyInfo">
        select
        <include refid="Base_Column_List"/>
        from t_link_topology_info
        where ENTRANCE_TYPE in
        <foreach collection="entranceTypes" separator="," item="entranceType"
                 open="(" close=")">
            #{entranceType,jdbcType=VARCHAR}
        </foreach>
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from t_link_topology_info
        where TLTI_ID = #{tltiId,jdbcType=BIGINT}
    </delete>

    <insert id="insert" parameterType="com.pamirs.tro.entity.domain.entity.TLinkTopologyInfo">
        insert into t_link_topology_info (TLTI_ID, LINK_ID, LINK_NAME,
                                          ENTRANCE_TYPE, LINK_ENTRANCE, NAME_SERVER,
                                          LINK_TYPE, LINK_GROUP, FROM_LINK_IDS,
                                          TO_LINK_IDS, SHOW_FROM_LINK_ID, SHOW_TO_LINK_ID,
                                          SECOND_LINK_ID, SECOND_LINK_NAME, APPLICATION_NAME, VOLUME_CALC_STATUS,
                                          CREATE_TIME,
                                          UPDATE_TIME)
        values (#{tltiId,jdbcType=BIGINT}, #{linkId,jdbcType=BIGINT}, #{linkName,jdbcType=VARCHAR},
                #{entranceType,jdbcType=VARCHAR}, #{linkEntrance,jdbcType=VARCHAR}, #{nameServer,jdbcType=VARCHAR},
                #{linkType,jdbcType=VARCHAR}, #{linkGroup,jdbcType=VARCHAR}, #{fromLinkIds,jdbcType=VARCHAR},
                #{toLinkIds,jdbcType=VARCHAR}, #{showFromLinkId,jdbcType=VARCHAR}, #{showToLinkId,jdbcType=VARCHAR},
                #{secondLinkId,jdbcType=VARCHAR}, #{secondLinkName,jdbcType=VARCHAR},
                #{applicationName,jdbcType=VARCHAR},
                #{volumeCalcStatus,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
                #{updateTime,jdbcType=TIMESTAMP})
    </insert>

    <insert id="insertSelective" parameterType="com.pamirs.tro.entity.domain.entity.TLinkTopologyInfo">
        insert into t_link_topology_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="tltiId != null">
                TLTI_ID,
            </if>
            <if test="linkId != null">
                LINK_ID,
            </if>
            <if test="linkName != null">
                LINK_NAME,
            </if>
            <if test="entranceType != null">
                ENTRANCE_TYPE,
            </if>
            <if test="linkEntrance != null">
                LINK_ENTRANCE,
            </if>
            <if test="nameServer != null">
                NAME_SERVER,
            </if>
            <if test="linkType != null">
                LINK_TYPE,
            </if>
            <if test="linkGroup != null">
                LINK_GROUP,
            </if>
            <if test="fromLinkIds != null">
                FROM_LINK_IDS,
            </if>
            <if test="toLinkIds != null">
                TO_LINK_IDS,
            </if>
            <if test="showFromLinkId != null">
                SHOW_FROM_LINK_ID,
            </if>
            <if test="showToLinkId != null">
                SHOW_TO_LINK_ID,
            </if>
            <if test="secondLinkId != null">
                SECOND_LINK_ID,
            </if>
            <if test="secondLinkName != null">
                SECOND_LINK_NAME,
            </if>
            <if test="applicationName != null">
                APPLICATION_NAME,
            </if>
            <if test="volumeCalcStatus != null">
                VOLUME_CALC_STATUS,
            </if>
            <if test="createTime != null">
                CREATE_TIME,
            </if>
            <if test="updateTime != null">
                UPDATE_TIME,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="tltiId != null">
                #{tltiId,jdbcType=BIGINT},
            </if>
            <if test="linkId != null">
                #{linkId,jdbcType=BIGINT},
            </if>
            <if test="linkName != null">
                #{linkName,jdbcType=VARCHAR},
            </if>
            <if test="entranceType != null">
                #{entranceType,jdbcType=VARCHAR},
            </if>
            <if test="linkEntrance != null">
                #{linkEntrance,jdbcType=VARCHAR},
            </if>
            <if test="nameServer != null">
                #{nameServer,jdbcType=VARCHAR},
            </if>
            <if test="linkType != null">
                #{linkType,jdbcType=VARCHAR},
            </if>
            <if test="linkGroup != null">
                #{linkGroup,jdbcType=VARCHAR},
            </if>
            <if test="fromLinkIds != null">
                #{fromLinkIds,jdbcType=VARCHAR},
            </if>
            <if test="toLinkIds != null">
                #{toLinkIds,jdbcType=VARCHAR},
            </if>
            <if test="showFromLinkId != null">
                #{showFromLinkId,jdbcType=VARCHAR},
            </if>
            <if test="showToLinkId != null">
                #{showToLinkId,jdbcType=VARCHAR},
            </if>
            <if test="secondLinkId != null">
                #{secondLinkId,jdbcType=VARCHAR},
            </if>
            <if test="secondLinkName != null">
                #{secondLinkName,jdbcType=VARCHAR},
            </if>
            <if test="applicationName != null">
                #{applicationName,jdbcType=VARCHAR},
            </if>
            <if test="volumeCalcStatus != null">
                #{volumeCalcStatus,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.pamirs.tro.entity.domain.entity.TLinkTopologyInfo">
        update t_link_topology_info
        <set>
            <if test="linkId != null">
                LINK_ID = #{linkId,jdbcType=BIGINT},
            </if>
            <if test="linkName != null">
                LINK_NAME = #{linkName,jdbcType=VARCHAR},
            </if>
            <if test="entranceType != null">
                ENTRANCE_TYPE = #{entranceType,jdbcType=VARCHAR},
            </if>
            <if test="linkEntrance != null">
                LINK_ENTRANCE = #{linkEntrance,jdbcType=VARCHAR},
            </if>
            <if test="nameServer != null">
                NAME_SERVER = #{nameServer,jdbcType=VARCHAR},
            </if>
            <if test="linkType != null">
                LINK_TYPE = #{linkType,jdbcType=VARCHAR},
            </if>
            <if test="linkGroup != null">
                LINK_GROUP = #{linkGroup,jdbcType=VARCHAR},
            </if>
            <if test="fromLinkIds != null">
                FROM_LINK_IDS = #{fromLinkIds,jdbcType=VARCHAR},
            </if>
            <if test="toLinkIds != null">
                TO_LINK_IDS = #{toLinkIds,jdbcType=VARCHAR},
            </if>
            <if test="showFromLinkId != null">
                SHOW_FROM_LINK_ID = #{showFromLinkId,jdbcType=VARCHAR},
            </if>
            <if test="showToLinkId != null">
                SHOW_TO_LINK_ID = #{showToLinkId,jdbcType=VARCHAR},
            </if>
            <if test="secondLinkId != null">
                SECOND_LINK_ID = #{secondLinkId,jdbcType=VARCHAR},
            </if>
            <if test="secondLinkName != null">
                SECOND_LINK_NAME = #{secondLinkName,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where TLTI_ID = #{tltiId,jdbcType=BIGINT}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.pamirs.tro.entity.domain.entity.TLinkTopologyInfo">
        update t_link_topology_info
        set LINK_ID           = #{linkId,jdbcType=BIGINT},
            LINK_NAME         = #{linkName,jdbcType=VARCHAR},
            ENTRANCE_TYPE     = #{entranceType,jdbcType=VARCHAR},
            LINK_ENTRANCE     = #{linkEntrance,jdbcType=VARCHAR},
            NAME_SERVER       = #{nameServer,jdbcType=VARCHAR},
            LINK_TYPE         = #{linkType,jdbcType=VARCHAR},
            LINK_GROUP        = #{linkGroup,jdbcType=VARCHAR},
            FROM_LINK_IDS     = #{fromLinkIds,jdbcType=VARCHAR},
            TO_LINK_IDS       = #{toLinkIds,jdbcType=VARCHAR},
            SHOW_FROM_LINK_ID = #{showFromLinkId,jdbcType=VARCHAR},
            SHOW_TO_LINK_ID   = #{showToLinkId,jdbcType=VARCHAR},
            SECOND_LINK_ID    = #{secondLinkId,jdbcType=VARCHAR},
            SECOND_LINK_NAME  = #{secondLinkName,jdbcType=VARCHAR},
            CREATE_TIME       = #{createTime,jdbcType=TIMESTAMP},
            UPDATE_TIME       = #{updateTime,jdbcType=TIMESTAMP}
        where TLTI_ID = #{tltiId,jdbcType=BIGINT}
    </update>

    <insert id="insertList" parameterType="list">
        insert into t_link_topology_info (TLTI_ID, LINK_ID, LINK_NAME,
        ENTRANCE_TYPE, LINK_ENTRANCE, NAME_SERVER,
        LINK_TYPE, LINK_GROUP, FROM_LINK_IDS,
        TO_LINK_IDS, SHOW_FROM_LINK_ID, SHOW_TO_LINK_ID,
        SECOND_LINK_ID, SECOND_LINK_NAME, APPLICATION_NAME,
        VOLUME_CALC_STATUS, CREATE_TIME, UPDATE_TIME)
        values
        <foreach collection="recordList" item="item" separator=",">
            (#{item.tltiId,jdbcType=BIGINT}, #{item.linkId,jdbcType=BIGINT}, #{item.linkName,jdbcType=VARCHAR},
            #{item.entranceType,jdbcType=VARCHAR}, #{item.linkEntrance,jdbcType=VARCHAR},
            #{item.nameServer,jdbcType=VARCHAR},
            #{item.linkType,jdbcType=VARCHAR}, #{item.linkGroup,jdbcType=VARCHAR}, #{item.fromLinkIds,jdbcType=VARCHAR},
            #{item.toLinkIds,jdbcType=VARCHAR}, #{item.showFromLinkId,jdbcType=VARCHAR},
            #{item.showToLinkId,jdbcType=VARCHAR},
            #{item.secondLinkId,jdbcType=VARCHAR},
            #{item.secondLinkName,jdbcType=VARCHAR},#{item.applicationName,jdbcType=VARCHAR},
            #{item.volumeCalcStatus,jdbcType=VARCHAR}, now(),
            now() )
        </foreach>

    </insert>

    <delete id="deleteAllData">
        delete
        from t_link_topology_info
    </delete>

    <resultMap id="TopologyResultMap" type="com.pamirs.tro.entity.domain.vo.TLinkTopologyInfoVo">
        <constructor>
            <idArg column="TLTI_ID" jdbcType="BIGINT" javaType="java.lang.Long"/>
            <arg column="LINK_ID" jdbcType="BIGINT" javaType="java.lang.Long"/>
            <arg column="LINK_NAME" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="ENTRANCE_TYPE" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="LINK_ENTRANCE" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="NAME_SERVER" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="LINK_TYPE" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="LINK_GROUP" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="FROM_LINK_IDS" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="TO_LINK_IDS" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="SHOW_FROM_LINK_ID" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="SHOW_TO_LINK_ID" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="SECOND_LINK_ID" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="SECOND_LINK_NAME" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="APPLICATION_NAME" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="VOLUME_CALC_STATUS" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="CREATE_TIME" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
            <arg column="UPDATE_TIME" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
            <arg column="AGENT_VERSION" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="PRADAR_VERSION" jdbcType="VARCHAR" javaType="java.lang.String"/>
        </constructor>
    </resultMap>

    <select id="queryLinkTopologyByLinkGroup" resultMap="TopologyResultMap">
        SELECT
        t.TLTI_ID,
        t.LINK_ID,
        t.LINK_NAME,
        t.ENTRANCE_TYPE,
        t.LINK_ENTRANCE,
        t.NAME_SERVER,
        t.LINK_TYPE,
        t.LINK_GROUP,
        t.FROM_LINK_IDS,
        t.TO_LINK_IDS,
        t.SHOW_FROM_LINK_ID,
        t.SHOW_TO_LINK_ID,
        t.SECOND_LINK_ID,
        t.SECOND_LINK_NAME,
        t.APPLICATION_NAME,
        t.VOLUME_CALC_STATUS,
        t.CREATE_TIME,
        t.UPDATE_TIME,
        m.AGENT_VERSION,
        m.PRADAR_VERSION
        FROM
        t_link_topology_info t
        LEFT JOIN t_application_mnt m ON t.APPLICATION_NAME = m.APPLICATION_NAME
        WHERE t.LINK_GROUP = #{linkGroup}
        <if test=" secondLinkId != null and secondLinkId != ''">
            and t.SECOND_LINK_ID = #{secondLinkId}
        </if>
    </select>

    <!--查询链路组/应用列表-->
    <select id="queryLinkGroupInfo" resultType="java.util.Map">
        SELECT t1.VALUE_NAME  AS `name`,
               t1.VALUE_ORDER AS linkGroup,
               t.LINK_ID,
               t.APPLICATION_NAME,
               t.ENTRANCE_TYPE,
               t.LINK_ENTRANCE
        FROM (
                 SELECT tdd.VALUE_NAME,
                        tdd.VALUE_ORDER
                 FROM t_dictionary_data tdd,
                      t_dictionary_type tdt
                 WHERE tdd.DICT_TYPE = tdt.ID
                   AND tdt.TYPE_ALIAS = 'LINK_MODULE'
             ) t1
                 LEFT JOIN t_link_topology_info t ON t1.VALUE_ORDER = t.LINK_GROUP
    </select>

    <!--查询瓶颈列表-->
    <select id="queryBottleNeckPreTime" resultType="com.pamirs.tro.entity.domain.entity.LinkBottleneck">
        SELECT *
        FROM t_link_bottleneck
        WHERE CREATE_TIME >= #{startTime}
    </select>

</mapper>
