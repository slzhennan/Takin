<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Copyright 2021 Shulie Technology, Co.Ltd
  ~ Email: shulie@shulie.io
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~      http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pamirs.tro.entity.dao.auth.TUserDeptRelationMapper">
    <resultMap id="BaseResultMap" type="com.pamirs.tro.entity.domain.entity.auth.UserDeptRelation">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="user_id" property="userId" jdbcType="VARCHAR"/>
        <result column="dept_id" property="deptId" jdbcType="VARCHAR"/>
        <result column="remark" property="remark" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="is_deleted" property="isDeleted" jdbcType="TINYINT"/>
    </resultMap>
    <resultMap id="DeptUserMap" type="com.pamirs.tro.entity.domain.entity.user.DeptUser">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="nick" property="nick" jdbcType="VARCHAR"/>
        <result column="dept_id" property="deptId" jdbcType="VARCHAR"/>
        <result column="dept_name" property="deptName" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, user_id, dept_id, remark, create_time, update_time, is_deleted
    </sql>
    <select id="selectByExample" resultMap="BaseResultMap"
            parameterType="com.pamirs.tro.entity.domain.entity.auth.UserDeptRelationExample">
        select
        <if test="distinct">
            distinct
        </if>
        'false' as QUERYID,
        <include refid="Base_Column_List"/>
        from t_tro_user_dept_relation
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from t_tro_user_dept_relation
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from t_tro_user_dept_relation
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" parameterType="com.pamirs.tro.entity.domain.entity.auth.UserDeptRelation">
        insert into t_tro_user_dept_relation (id, user_id, dept_id,
                                              remark, create_time, update_time,
                                              is_deleted)
        values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=VARCHAR}, #{deptId,jdbcType=VARCHAR},
                #{remark,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP},
                #{isDeleted,jdbcType=TINYINT})
    </insert>
    <insert id="insertSelective" parameterType="com.pamirs.tro.entity.domain.entity.auth.UserDeptRelation">
        insert into t_tro_user_dept_relation
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="deptId != null">
                dept_id,
            </if>
            <if test="remark != null">
                remark,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="isDeleted != null">
                is_deleted,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=VARCHAR},
            </if>
            <if test="deptId != null">
                #{deptId,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="isDeleted != null">
                #{isDeleted,jdbcType=TINYINT},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.pamirs.tro.entity.domain.entity.auth.UserDeptRelation">
        update t_tro_user_dept_relation
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=VARCHAR},
            </if>
            <if test="deptId != null">
                dept_id = #{deptId,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="isDeleted != null">
                is_deleted = #{isDeleted,jdbcType=TINYINT},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.pamirs.tro.entity.domain.entity.auth.UserDeptRelation">
        update t_tro_user_dept_relation
        set user_id     = #{userId,jdbcType=VARCHAR},
            dept_id     = #{deptId,jdbcType=VARCHAR},
            remark      = #{remark,jdbcType=VARCHAR},
            create_time = #{createTime,jdbcType=TIMESTAMP},
            update_time = #{updateTime,jdbcType=TIMESTAMP},
            is_deleted  = #{isDeleted,jdbcType=TINYINT}
        where id = #{id,jdbcType=BIGINT}
    </update>
    <select id="selectByDept" resultMap="DeptUserMap">
        SELECT
        a.id as id,a.`name` as `name`,a.nick as nick,b.id as dept_id,b.`name` as dept_name,c.create_time
        FROM
        t_tro_user a
        JOIN t_tro_dept b
        JOIN t_tro_user_dept_relation c ON a.id = c.user_id
        AND b.id = c.dept_id
        <where>
            <if test="deptIds !=null">
                c.dept_id in
                <foreach collection="deptIds" item="deptId" index="index" open="(" separator="," close=")">
                    #{deptId}
                </foreach>
            </if>
            <if test="name!=null and name!=''">
                AND a.`name` like
                concat('%',#{name},'%')
            </if>
        </where>
    </select>
    <select id="selectUserIdByScope" resultMap="DeptUserMap">
        SELECT
        a.id as id,a.`name` as `name`,a.nick as nick,b.id as dept_id,b.`name` as dept_name,c.create_time
        FROM
        t_tro_user a
        JOIN t_tro_dept b
        JOIN t_tro_user_dept_relation c ON a.id = c.user_id
        AND b.id = c.dept_id
        <where>
            <if test="deptIds !=null and deptIds.size()>0">
                c.dept_id in
                <foreach collection="deptIds" item="deptId" index="index" open="(" separator="," close=")">
                    #{deptId}
                </foreach>
            </if>
            <if test="id!=null">
                or a.`id` = #{id}
            </if>
        </where>
    </select>
    <select id="selectByRole" resultMap="DeptUserMap">
        SELECT a.id          as id,
               a.`name`      as `name`,
               a.nick        as nick,
               b.id          as dept_id,
               b.`name`      as dept_name,
               e.create_time as create_time
        FROM t_tro_user a
                 JOIN t_tro_dept b
                 JOIN t_tro_user_dept_relation c
                 JOIN t_tro_role d
                 JOIN t_tro_role_user_relation e
                      ON a.id = c.user_id
                          AND b.id = c.dept_id
                          AND a.id = e.user_id
                          AND d.id = e.role_id
        where e.role_id = #{roleId}
        group by c.dept_id, a.id
    </select>
</mapper>
